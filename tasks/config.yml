---
- block:
  - name: Copy prometheus rules
    template:
      src: "{{ item }}"
      dest: "{{ prometheus_rules_path }}/{{ (item | basename | splitext)[0] }}.j2"
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_group }}"
      mode: 0640
    loop: "{{ query('fileglob', prometheus_config_rules_templates_path + '/*') }}"
    notify:
      - reload prometheus

  - name: Set prometheus rules source templates
    find:
      paths: "{{ prometheus_config_rules_templates_path }}"
      file_type: file
    delegate_to: localhost
    become: no
    register: rules_loaded

  - name: Set prometheus rules templates
    set_fact:
      prometheus_rules_templates:  "{{ rules_loaded.files | map(attribute='path') | map('basename') | list }}"

  - name: Checking prometheus rules in path
    find:
      paths: "{{ prometheus_rules_path }}"
      file_type: file
    register: check_rules

  - name: Remove old prometheus rules
    file:
      path: "{{ prometheus_rules_path }}/{{ item }}"
      state: absent
    loop:
      - "{{ check_rules.files | map(attribute='path') | map('basename') | list | difference(prometheus_rules_templates) }}"

  - name: Copy prometheus common scrape templates
    template:
      src: "prometheus/{{ item }}.j2"
      dest: "{{ prometheus_snippets_path }}/{{ item }}"
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_group }}"
      mode: 0640
    loop: "{{ prometheus_template_common_configs }}"

  - name: Load prometheus scrape vars
    include_vars:
      file: "{{ item }}"
      name: "{{ item | basename | splitext | first }}"
    loop: "{{ query('fileglob', prometheus_config_vars_templates_path + '/*') }}"

  - name: Copy prometheus scrape files
    copy:
      src: "{{ item }}"
      dest: "{{ prometheus_snippets_path }}/{{ item | basename }}"
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_group }}"
      mode: 0640
    loop: "{{ query('fileglob', prometheus_config_scrapes_files_path + '/*') }}"

  - name: Copy prometheus scrape templates
    template:
      src: "{{ item }}"
      dest: "{{ prometheus_snippets_path }}/{{ item | basename | splitext | first }}"
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_group }}"
      mode: 0640
    loop: "{{ query('fileglob', prometheus_config_scrapes_templates_path + '/*') }}"

  - name: Set prometheus scrape source files
    find:
      paths: "{{ prometheus_config_scrapes_files_path }}"
      file_type: file
    delegate_to: localhost
    become: no
    register: prometheus_config_scrapes_files_loaded

  - name: Set prometheus scrape source templates
    find:
      paths: "{{ prometheus_config_scrapes_templates_path }}"
      file_type: file
    delegate_to: localhost
    become: no
    register: prometheus_config_scrapes_templates_loaded

  - name: Set prometheus snippets list
    set_fact:
      prometheus_config_scrapes_load_list:  "{{ ( prometheus_config_scrapes_files_loaded.files + prometheus_config_scrapes_templates_loaded.files ) | map(attribute='path') | map('basename') | map('splitext') | map('first') | list | union(prometheus_template_common_configs) }}"

  - name: Checking prometheus scrapes in existing path
    find:
      paths: "{{ prometheus_snippets_path }}"
      file_type: file
    register: check_config_scrapes_existing

  - name: Remove old prometheus scrapes
    file:
      path: "{{ prometheus_snippets_path }}/{{ item }}"
      state: absent
    loop:
      - "{{ check_config_scrapes_existing.files | map(attribute='path') |  map('basename') | map('splitext') | map('first') | list | difference(prometheus_config_scrapes_load_list) }}"

  - name: Join prometheus config snippets
    assemble:
      remote_src: true
      src: "{{ prometheus_snippets_path }}"
      dest: "{{ prometheus_conf_file }}"
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_group }}"
      mode: 0640
      delimiter: '\n'
    notify:
      - reload prometheus

  - name: Copy prometheus logrotate config
    template:
      src: prometheus/logrotate.j2
      dest: /etc/logrotate.d/prometheus
      mode: 0644
      owner: root
      group: root
  when: is_prometheus

- block:
  - name: Copy alertmanager common config templates
    template:
      src: "alertmanager/{{ item }}.j2"
      dest: "{{ alertmanager_snippets_path }}/{{ item }}"
      owner: "{{ alertmanager_user }}"
      group: "{{ alertmanager_group }}"
      mode: 0640
    loop: "{{ alertmanager_template_common_configs }}"

  - name: Copy alertmanager config files
    copy:
      src: "{{ item }}"
      dest: "{{ alertmanager_snippets_path }}/{{ item | basename }}"
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_group }}"
      mode: 0640
    loop: "{{ query('fileglob', alertmanager_config_snippets_files_path + '/*') }}"

  - name: Copy alertmanager config templates
    copy:
      src: "{{ item }}"
      dest: "{{ alertmanager_snippets_path }}/{{ item | basename }}"
      owner: "{{ alertmanager_user }}"
      group: "{{ alertmanager_group }}"
      mode: 0640
    loop: "{{ query('fileglob', alertmanager_config_snippets_templates_path + '/*') }}"

  - name: Check current alertmanager snippets
    find:
      paths: "{{ alertmanager_snippets_path }}"
      file_type: file
    register: check_snippets

  - name: Copy alertmanager default snippets
    copy:
      src: "alertmanager/{{ item }}"
      dest: "{{ alertmanager_snippets_path }}/{{ item }}"
      owner: "{{ alertmanager_user }}"
      group: "{{ alertmanager_group }}"
      mode: 0640
    loop:
      - 2_alertmanager_routes
      - 3_alertmanager_inhibit_rules
    when:
      - check_snippets.files|length < 3

  - name: Set alertmanager config source files
    find:
      paths: "{{ alertmanager_config_snippets_files_path }}"
      file_type: file
    delegate_to: localhost
    become: no
    register: alertmanager_config_files_loaded

  - name: Set alertmanager config source templates
    find:
      paths: "{{ alertmanager_config_snippets_templates_path }}"
      file_type: file
    delegate_to: localhost
    become: no
    register: alertmanager_config_templates_loaded

  - name: Set alertmanager snippets consolidated list
    set_fact:
      alertmanager_config_load_list:  "{{ ( alertmanager_config_files_loaded.files + alertmanager_config_templates_loaded.files ) | map(attribute='path') | map('basename') | map('splitext') | map('first') | list | union(alertmanager_template_common_configs) }}"

  - name: Checking alertmanager snippets in existing path
    find:
      paths: "{{ alertmanager_snippets_path }}"
      file_type: file
    register: check_snippets_existing

  - name: Remove old alertmanager snippets
    file:
      path: "{{ alertmanager_snippets_path }}/{{ item }}"
      state: absent
    loop:
      - "{{ check_snippets_existing.files | map(attribute='path') |  map('basename') | map('splitext') | map('first') | list | difference(alertmanager_config_load_list) }}"

  - name: Join alertmanager config snippets
    assemble:
      remote_src: true
      src: "{{ alertmanager_snippets_path }}"
      dest: "{{ alertmanager_conf_file }}"
      owner: "{{ alertmanager_user }}"
      group: "{{ alertmanager_group }}"
      mode: 0640
      delimiter: '\n'
    notify:
      - reload alertmanager

  - name: Copy alertmanager templates
    copy:
      src: "{{ item }}"
      dest: "{{ alertmanager_conf_templates_path }}/{{ item }}"
      owner: "{{ alertmanager_user }}"
      group: "{{ alertmanager_group }}"
      mode: 0640
    loop: "{{ query('fileglob', alertmanager_config_templates_path + '/*') }}"
    notify:
      - reload alertmanager

  - name: Copy alertmanager logrotate config
    template:
      src: alertmanager/logrotate.j2
      dest: /etc/logrotate.d/alertmanager
      mode: 0644
      owner: root
      group: root
  when: is_alertmanager

- block:
  - name: Copy blackbox_exporter config template
    template:
      src: "blackbox_exporter/blackbox.yml.j2"
      dest: "{{ blackbox_exporter_conf_file }}"
      owner: "{{ blackbox_exporter_user }}"
      group: "{{ blackbox_exporter_group }}"
      mode: 0640
  when: is_blackbox_exporter