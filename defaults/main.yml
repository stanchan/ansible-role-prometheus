---
required_packages: []
systemd_service_dir: /lib/systemd/system
is_service: no
is_systemd: no
enable_config: yes

gosu_version: "1.11"
gosu_release_system: amd64
gosu_url: "https://github.com/tianon/gosu/releases/download/{{ gosu_version }}/gosu-{{ gosu_release_system }}"
gosu_ssl_verify: yes

prometheus_version: 2.17.1
prometheus_release_system: linux-amd64
prometheus_release_name: "prometheus-{{ prometheus_version }}.{{ prometheus_release_system }}"
prometheus_package: "{{ prometheus_release_name }}.tar.gz"
prometheus_url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/{{ prometheus_package }}"
prometheus_force_deploy: no
prometheus_ssl_verify: yes

prometheus_service_name: prometheus
prometheus_external_hostname: "{{ ansible_hostname }}"
prometheus_port: 9090

prometheus_user: prometheus
prometheus_group: prometheus

prometheus_root_path: /opt/prometheus
prometheus_conf_path: /etc/prometheus
prometheus_data_root: /data/prometheus
prometheus_conf_file: "{{ prometheus_conf_path }}/prometheus.yml"
prometheus_bin_path: "{{ prometheus_root_path }}/bin"
prometheus_releases_path: "{{ prometheus_root_path }}/releases"
prometheus_rules_path: "{{ prometheus_conf_path }}/rules"
prometheus_snippets_path: "{{ prometheus_conf_path }}/snippets"
prometheus_data_path: "{{ prometheus_root_path }}/data"
prometheus_log_file: "/var/log/prometheus/prometheus.log"
prometheus_template_common_configs:
  - "1_global_prometheus"
  - "2_prometheus_scrapes"

prometheus_config_scrapes_files_path: "{{ playbook_dir }}/files/prometheus/config/scrapes"
prometheus_config_scrapes_templates_path: "{{ playbook_dir }}/templates/prometheus/config/scrapes"
prometheus_config_vars_templates_path: "{{ playbook_dir }}/templates/prometheus/config/vars"
prometheus_config_rules_files_path: "{{ playbook_dir }}/files/prometheus/rules"
prometheus_config_rules_templates_path: "{{ playbook_dir }}/templates/prometheus/rules"

prometheus_storage_local_memory_chunks: 262144
prometheus_storage_max_chunks_to_persist: 131072
prometheus_storage_retention_time: 365d
prometheus_storage_retention_local_series_file_shrink_ratio: 0.03

prometheus_scrape_interval: 1m
prometheus_scrape_timeout: 10s
prometheus_evaluation_interval: 1m
prometheus_external_labels: []

prometheus_alertmanager_hosts:
  - "{{ prometheus_alertmanager_host }}:{{ prometheus_alertmanager_port }}"

prometheus_alertmanager_host: localhost
prometheus_alertmanager_port: 9093

prometheus_remote_shutdown_enabled: 'false'

prometheus_options:
  - "config.file={{ prometheus_conf_file }}"
  - "storage.tsdb.retention.time={{ prometheus_storage_retention_time }}"
  - "storage.tsdb.path={{ prometheus_data_path }}"
  - "web.external-url=http://{{ prometheus_external_hostname }}:{{ prometheus_port }}/"
  - "web.enable-admin-api"
  - "web.enable-lifecycle"

prometheus_statistics_relabel_configs:
  - source_labels: '[__address__]'
    regex: '(.+):(.*)$'
    target_label: instance
    replacement: ${1}

prometheus_scrape:
  - role: 'prometheus_statistics'
    type: 'prometheus'
    configs:
      - env: 'devtest'
        nodes: "{{ groups['prometheus'] | map('extract', hostvars, 'inventory_hostname') | map('regex_replace', '^(.*)$', '\\1:{}'.format(prometheus_port)) | list }}"
  - role: 'alertmanager'
    type: 'alertmanager'
    configs:
      - env: 'devtest'
        nodes: "{{ groups['alertmanager'] | map('extract', hostvars, 'inventory_hostname') | map('regex_replace', '^(.*)$', '\\1:{}'.format(prometheus_alertmanager_port)) | list }}"
  - role: 'grafana'
    type: 'grafana'
    configs:
      - env: 'devtest'
        nodes: "{{ groups['grafana'] | map('extract', hostvars, 'inventory_hostname') | map('regex_replace', '^(.*)$', '\\1:{}'.format(grafana_port)) | list }}"
  - role: "pushgateway_{{ pushgateway_external_hostname.split('.')[0] }}"
    type: 'pushgateway'
    configs:
      - env: 'devtest'
        nodes: [ "{{ pushgateway_external_hostname }}:{{ pushgateway_port }}" ]
  - role: 'node'
    type: 'node-exporter'
    configs:
      - env: 'devtest'
        nodes: "{{ groups['node_exporter'] | map('extract', hostvars, 'inventory_hostname') | map('regex_replace', '^(.*)$', '\\1:{}'.format(node_exporter_port)) | list }}"
  - role: 'solr'
    type: 'solr-exporter'
    configs:
      - env: 'devtest'
        nodes: "{{ groups['solr_exporter'] | map('extract', hostvars, 'inventory_hostname') | map('regex_replace', '^(.*)$', '\\1:{}'.format(solr_exporter_port)) | list }}"
  - role: 'zookeeper'
    type: 'jmx-exporter'
    configs:
      - env: 'devtest'
        nodes: "{{ groups['jmx_exporter'] | map('extract', hostvars, 'inventory_hostname') | map('regex_replace', '^(.*)$', '\\1:{}'.format(zookeeper_jmx_exporter_port)) | list }}"

alertmanager_version: 0.20.0
alertmanager_release_system: linux-amd64
alertmanager_release_name: "alertmanager-{{ alertmanager_version }}.{{ alertmanager_release_system }}"
alertmanager_package: "{{ alertmanager_release_name }}.tar.gz"
alertmanager_url: "https://github.com/prometheus/alertmanager/releases/download/v{{ alertmanager_version }}/{{ alertmanager_package }}"
alertmanager_force_deploy: no
alertmanager_ssl_verify: yes

alertmanager_service_name: alertmanager
alertmanager_external_hostname: "{{ ansible_nodename }}"
alertmanager_port: 9093

alertmanager_user: "{{ prometheus_user }}"
alertmanager_group: "{{ prometheus_group }}"

alertmanager_root_path: /opt/alertmanager
alertmanager_conf_path: /etc/alertmanager
alertmanager_conf_file: "{{ alertmanager_conf_path }}/alertmanager.yml"
alertmanager_bin_path: "{{ alertmanager_root_path }}/bin"
alertmanager_releases_path: "{{ alertmanager_root_path }}/releases"
alertmanager_conf_templates_path: "{{ alertmanager_conf_path }}/conf.d"
alertmanager_snippets_path: "{{ alertmanager_conf_path }}/snippets"
alertmanager_data_path: "{{ alertmanager_root_path }}/data"
alertmanager_log_file: "/var/log/alertmanager/alertmanager.log"
alertmanager_template_common_configs:
  - "1_global_alertmanager"
  - "4_global_receivers"

alertmanager_config_snippets_files_path: "{{ playbook_dir }}/files/alertmanager/config"
alertmanager_config_snippets_templates_path: "{{ playbook_dir }}/templates/alertmanager/config"
alertmanager_config_templates_path: "{{ playbook_dir }}/files/alertmanager/templates"

alertmanager_service_options:
  - "config.file={{ alertmanager_conf_file }}"
  - "storage.path={{ alertmanager_data_path }}"
  - "web.listen-address=:{{ alertmanager_port }}"
  - "web.external-url=http://{{ alertmanager_external_hostname }}:{{ alertmanager_port }}/"

alertmanager_resolve_timeout: 5m

alertmanager_smtp_from: ""
alertmanager_smtp_smarthost: ""
alertmanager_smtp_auth_username: ""
alertmanager_smtp_auth_password: ""
alertmanager_smtp_auth_secret: ""
alertmanager_smtp_require_tls: "true"
alertmanager_slack_api_url: ""
alertmanager_pagerduty_url: ""
alertmanager_opsgenie_api_host: ""
alertmanager_hipchat_url: ""
alertmanager_hipchat_auth_token: ""

alertmanager_receivers:
  - name: 'default-receiver'
    config:
      webhook_configs:
        - url: 'http://127.0.0.1:5001/'

alertmanager_relabel_configs:
  - source_labels: '[__address__]'
    regex: '(.+):(.*)$'
    target_label: instance
    replacement: ${1}

pushgateway_version: 1.2.0
pushgateway_release_system: linux-amd64
pushgateway_release_name: "pushgateway-{{ pushgateway_version }}.{{ pushgateway_release_system }}"
pushgateway_package: "{{ pushgateway_release_name }}.tar.gz"
pushgateway_url: "https://github.com/prometheus/pushgateway/releases/download/v{{ pushgateway_version }}/{{ pushgateway_package }}"
pushgateway_force_deploy: no
pushgateway_ssl_verify: yes

pushgateway_service_name: pushgateway
pushgateway_external_hostname: "{{ ansible_nodename }}"
pushgateway_port: 9091

pushgateway_user: "{{ prometheus_user }}"
pushgateway_group: "{{ prometheus_group }}"

pushgateway_root_path: /opt/pushgateway
pushgateway_conf_path: "/etc/pushgateway"
pushgateway_bin_path: "{{ pushgateway_root_path }}/bin"
pushgateway_releases_path: "{{ pushgateway_root_path }}/releases"
pushgateway_log_file: "/var/log/pushgateway/pushgateway.log"

pushgateway_service_options:
  - "push.disable-consistency-check"
  - "web.listen-address=:{{ pushgateway_port }}"
  - "web.external-url=http://{{ pushgateway_external_hostname }}:{{ pushgateway_port }}/"

pushgateway_relabel_configs:
  - source_labels: '[__address__]'
    regex: '(.+):(.*)$'
    target_label: instance
    replacement: ${1}

node_exporter_version: 0.18.1
node_exporter_release_system: linux-amd64
node_exporter_release_name: "node_exporter-{{ node_exporter_version }}.{{ node_exporter_release_system }}"
node_exporter_package: "{{ node_exporter_release_name }}.tar.gz"
node_exporter_url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/{{ node_exporter_package }}"
node_exporter_force_deploy: no
node_exporter_ssl_verify: yes

node_exporter_service_name: node_exporter
node_exporter_external_hostname: "{{ ansible_fqdn }}"
node_exporter_port: 9100

node_exporter_user: root
node_exporter_group: root

node_exporter_root_path: /opt/node_exporter
node_exporter_conf_path: "/etc/node_exporter"
node_exporter_bin_path: "{{ node_exporter_root_path }}/bin"
node_exporter_releases_path: "{{ node_exporter_root_path }}/releases"
node_exporter_textfile_path: "/var/lib/node_exporter/textfile_collector"
node_exporter_log_file: "/var/log/node_exporter/node_exporter.log"

node_exporter_service_options:
  - "web.listen-address=:{{ node_exporter_port }}"
  - "collector.textfile.directory={{ node_exporter_textfile_path }}"

node_exporter_relabel_configs:
  - source_labels: '[__address__]'
    regex: '(.+):(.*)$'
    target_label: instance
    replacement: ${1}

blackbox_exporter_version: 0.16.0
blackbox_exporter_release_system: linux-amd64
blackbox_exporter_release_name: "blackbox_exporter-{{ blackbox_exporter_version }}.{{ blackbox_exporter_release_system }}"
blackbox_exporter_package: "{{ blackbox_exporter_release_name }}.tar.gz"
blackbox_exporter_url: "https://github.com/prometheus/blackbox_exporter/releases/download/v{{ blackbox_exporter_version }}/{{ blackbox_exporter_package }}"
blackbox_exporter_force_deploy: no
blackbox_exporter_ssl_verify: yes

blackbox_exporter_service_name: blackbox_exporter
blackbox_exporter_external_hostname: "{{ ansible_fqdn }}"
blackbox_exporter_port: 9115

blackbox_exporter_user: root
blackbox_exporter_group: root

blackbox_exporter_root_path: /opt/blackbox_exporter
blackbox_exporter_conf_path: "/etc/blackbox_exporter"
blackbox_exporter_conf_file: "{{ blackbox_exporter_conf_path }}/blackbox.yml"
blackbox_exporter_bin_path: "{{ blackbox_exporter_root_path }}/bin"
blackbox_exporter_releases_path: "{{ blackbox_exporter_root_path }}/releases"
blackbox_exporter_log_file: "/var/log/blackbox_exporter/blackbox_exporter.log"

blackbox_exporter_service_options:
  - "config.file={{ blackbox_exporter_conf_file }}"
  - "web.listen-address=:{{ blackbox_exporter_port }}"
  - "web.external-url=http://{{ blackbox_exporter_external_hostname }}:{{ blackbox_exporter_port }}/"

blackbox_relabel_configs:
  - source_labels: '[__address__]'
    regex: '(.+):(.*)$'
    target_label: instance
    replacement: ${1}

solr_exporter_version: 0.1.0
solr_exporter_release_system: linux-amd64
solr_exporter_release_name: "prometheus-solr-exporter-{{ solr_exporter_version }}.{{ solr_exporter_release_system }}"
solr_exporter_package: "{{ solr_exporter_release_name }}.tar.gz"
solr_exporter_url: "https://github.com/stanchan/prometheus-solr-exporter/releases/download/v{{ solr_exporter_version }}/{{ solr_exporter_package }}"
solr_exporter_force_deploy: no
solr_exporter_ssl_verify: yes

solr_exporter_service_name: solr_exporter
solr_exporter_external_hostname: "{{ ansible_nodename }}"
solr_exporter_port: 9231

solr_port: 8983
solr_pid_file: "/run/solr/solr-{{ solr_port }}.pid"

solr_exporter_user: root
solr_exporter_group: root

solr_exporter_home: /opt/solr_exporter
solr_exporter_bin_path: "{{ solr_exporter_home }}/bin"
solr_exporter_bin: "solr_exporter-{{ solr_exporter_version }}"
solr_exporter_release_root: "{{ solr_exporter_home }}/releases"
solr_exporter_log_file: /var/log/solr_exporter/solr_exporter.log

solr_exporter_service_options:
  - "solr.address=http://localhost:{{ solr_port }}"
  - "solr.context-path=/solr"
  - "solr.pid-file={{ solr_pid_file }}"
  - "solr.timeout=5s"

solr_exporter_relabel_configs:
  - source_labels: '[__address__]'
    regex: '(.+):(.*)$'
    target_label: instance
    replacement: ${1}

solr_exporter_metric_relabel_configs:
  - source_labels: "['core']"
    regex: "'^([\\w\\-]+)_shard([0-9_]+)_replica_([npt].\\d+)'"
    replacement: "'${1}'"
    target_label: collection
  - source_labels: "['core']"
    regex: "'^([\\w\\-]+)_shard([0-9_]+)_replica_([npt].\\d+)'"
    replacement: "'${2}'"
    target_label: shard
  - source_labels: "['core']"
    regex: "'^([\\w\\-]+)_shard([0-9_]+)_replica_([npt].\\d+)'"
    replacement: "'${3}'"
    target_label: replica
